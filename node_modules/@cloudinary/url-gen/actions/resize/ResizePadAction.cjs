'use strict';

var tslib_es6 = require('../../tslib.es6-18ed4f64.cjs');
var internal_qualifier_Qualifier = require('../../internal/qualifier/Qualifier.cjs');
var actions_resize_ResizeAdvancedAction = require('./ResizeAdvancedAction.cjs');
require('../../internal/qualifier/QualifierValue.cjs');
require('./ResizeSimpleAction.cjs');
require('../../internal/Action.cjs');
require('../../qualifiers/flag/FlagQualifier.cjs');
require('../../internal/utils/dataStructureUtils.cjs');
require('../../internal/utils/toFloatAsString.cjs');
require('../../qualifiers/aspectRatio/AspectRatioQualifierValue.cjs');
require('../../qualifiers/flag.cjs');

/**
 * @description Defines an advanced resize with padding.
 * @extends Actions.Resize.ResizeAdvancedAction
 * @memberOf Actions.Resize
 * @see Visit {@link Actions.Resize| Resize} for examples
 */
var ResizePadAction = /** @class */ (function (_super) {
    tslib_es6.__extends(ResizePadAction, _super);
    function ResizePadAction() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @description Sets the background.
     * @param {Qualifiers.Background} backgroundQualifier Defines the background color to use instead of
     * transparent background areas or when resizing with padding.
     */
    ResizePadAction.prototype.background = function (backgroundQualifier) {
        return this.addQualifier(backgroundQualifier);
    };
    ResizePadAction.prototype.gravity = function (direction) {
        return this.addQualifier(direction);
    };
    /**
     * @description Horizontal position for custom-coordinates based padding.
     * @param {number} x The x position.
     */
    ResizePadAction.prototype.offsetX = function (x) {
        return this.addQualifier(new internal_qualifier_Qualifier.Qualifier('x', x));
    };
    /**
     * @description Vertical position for custom-coordinates based padding
     * @param {number} y The y position.
     */
    ResizePadAction.prototype.offsetY = function (y) {
        return this.addQualifier(new internal_qualifier_Qualifier.Qualifier('y', y));
    };
    return ResizePadAction;
}(actions_resize_ResizeAdvancedAction));

module.exports = ResizePadAction;
